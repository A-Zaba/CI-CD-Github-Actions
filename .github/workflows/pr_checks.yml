name: Repository Pull Request Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  # The bash escape character is \033
  bashPass:   \033[32;1mPASSED -
  bashInfo:   \033[33;1mINFO -
  bashFail:   \033[31;1mFAILED -
  bashEnd:    \033[0m


jobs:
  PR-repo-checks:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request }} || ${{ github.event.workflow }}
    strategy:
      fail-fast: false
      matrix:
        inputs:
          [
            {
              repository: coreHTTP,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: FreeRTOS,
              org: skptak,
            },
            {
              repository: coreJSON,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: FreeRTOS,
              org: skptak,
            },
            {
              repository: coreMQTT,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: FreeRTOS,
              org: skptak,
            },
            {
              repository: corePKCS11,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: FreeRTOS,
              org: skptak,
            },
            {
              repository: coreSNTP,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: FreeRTOS,
              org: skptak,
            },
            {
              repository: FreeRTOS-Cellular-Interface,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: FreeRTOS,
              org: skptak,
            },
            {
              repository: Device-Defender-for-AWS-IoT-embedded-sdk,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: aws,
              org: skptak,
            },
            {
              repository: Device-Shadow-for-AWS-IoT-embedded-sdk,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: aws,
              org: skptak,
            },
            {
              repository: Fleet-Provisioning-for-AWS-IoT-embedded-sdk,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: aws,
              org: skptak,
            },
            {
              repository: Jobs-for-AWS-IoT-embedded-sdk,
              exclude-files: ".cSpellWords.txt",
              run-complexity: true,
              #org: aws,
              org: skptak,
            },
            {
              repository: ota-for-AWS-IoT-embedded-sdk,
              exclude-files: ".cSpellWords.txt",
              run-complexity: true,
              #org: aws,
              org: skptak,
            },
            {
              repository: SigV4-for-AWS-IoT-embedded-sdk,
              exclude-files: .cSpellWords.txt,
              run-complexity: true,
              #org: aws,
              org: skptak,
            },
            {
            repository: FreeRTOS-Kernel,
            exclude-files: .cSpellWords.txt,
            run-complexity: false,
            #org: aws,
            org: skptak,
            },
            {
              repository: FreeRTOS,
              exclude-files: .cSpellWords.txt,
              run-complexity: false,
              #org: FreeRTOS,
              org: skptak,
            },
            {
              repository: FreeRTOS-Plus-TCP,
              exclude-files: .cSpellWords.txt,
              run-complexity: false,
              #org: FreeRTOS,
              org: skptak,
            },
          ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.11.0'

      - name: "Clone: ${{ matrix.inputs.repository }}"
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.inputs.org }}/${{ matrix.inputs.repository }}
          ref: main
          path: ${{ matrix.inputs.repository }}

      - name: "Link Verifier Check: ${{ matrix.inputs.repository }}"
        uses: ./link-verifier
        if: success() || failure()
        with:
          path: ${{ matrix.inputs.repository }}
          exclude-dirs: complexity,formatting
          include-file-types: .c,.html

      - name: "Formatting Check : ${{ matrix.inputs.repository }}"
        if: success() || failure()
        uses: ./formatting
        with:
          path: ${{ matrix.inputs.repository }}
          exclude-files: ${{ matrix.inputs.exclude-files }}
          exclude-dirs: ${{matrix.inputs.exclude-dirs }}

      - name: "Complexity Check: ${{ matrix.inputs.repository }}"
        if: success() || failure() && ${{ matrix.inputs.run-complexity }} == true
        uses: ./complexity
        with:
          path: ${{ matrix.inputs.repository }}
          horrid_threshold: 16

      - name: "Doxygen Build Check ${{ matrix.inputs.repository }}"
        if: success() || failure()
        uses: ./doxygen
        with:
          path: ${{ matrix.inputs.repository }}

      - name: "Doxygen Zip Check: ${{ matrix.inputs.repository }}"
        if: success() || failure()
        uses: ./doxygen
        with:
          path: ${{ matrix.inputs.repository }}
          generate_zip: true

      - name: "Spelling Check: ${{ matrix.inputs.repository }} "
        if: success() || failure()
        uses: ./rust-spell-check
        with:
          path: ${{ matrix.inputs.repository }}

      - name: "Memory Statistics Check: ${{ matrix.inputs.repository }}"
        if: success() || failure()
        uses: ./memory_statistics
        with:
          path: memory_statistics/test
          config: ./memory_statistics_config.json
          output: ./size_table_new.html
          check_against: ./size_table_expected.html

      - name: "Clone: ${{ matrix.inputs.repository }}"
        if: success() || failure()
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.inputs.org }}/${{ matrix.inputs.repository }}
          ref: main
          path: ${{ matrix.inputs.repository }}_Recursive
          submodules: recursive
          fetch-depth: 0

      - name: "Manifest Verifier: ${{ matrix.inputs.repository }}"
        if: success() || failure()
        uses: ./manifest-verifier
        with:
          path: ${{ matrix.inputs.repository }}_Recursive
          exclude-submodules: FreeRTOS-Plus/Test/CMock,FreeRTOS/Test/CMock/CMock,FreeRTOS/Test/litani
          fail-on-incorrect-version: true

      - name: Build ${{matrix.inputs.repository}}
        if: success() || failure() && ${{ matrix.inputs.run-complexity }} == true
        shell: bash
        working-directory: ${{matrix.inputs.repository}}_Recursive
        run: |
          echo "::group:: Install lcov"
          sudo apt-get install -y lcov
          echo "::endgroup::"
          cmake -S ./test -B build/ \
          -G "Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Debug \
          -DBUILD_CLONE_SUBMODULES=ON \
          -DCMAKE_C_FLAGS='--coverage -Wall -Wextra -Werror'
          make -C build/ all

      - name: Test
        if: success() || failure() && ${{ matrix.inputs.run-complexity }} == true
        shell: bash
        working-directory: ${{matrix.inputs.repository}}_Recursive
        run: |
          cd build/
          ctest -E system --output-on-failure
          cd ..

      - name: Run Coverage ${{matrix.inputs.repository}}
        if: success() || failure() && ${{ matrix.inputs.run-complexity }} == true
        shell: bash
        working-directory: ${{matrix.inputs.repository}}_Recursive
        run: |
          make -C build/ coverage
          declare -a EXCLUDE=("\*test/\*" "\*CMakeCCompilerId\*" "\*mocks\*")
          echo ${EXCLUDE[@]} | xargs lcov --rc lcov_branch_coverage=1 -r build/coverage.info -o build/coverage.info
          lcov --rc lcov_branch_coverage=1 --list build/coverage.info

      - name: Test coverage cop action ${{matrix.inputs.repository}}
        if: success() || failure() && ${{ matrix.inputs.run-complexity }} == true
        uses: ./coverage-cop
        with:
          path: ./${{matrix.inputs.repository}}_Recursive/build/coverage.info
          branch-coverage-min: 70
          line-coverage-min: 100
